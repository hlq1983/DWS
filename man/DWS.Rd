% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DWS.R
\name{DWS}
\alias{DWS}
\title{DWS}
\usage{
DWS(
  h,
  xyz,
  t,
  n,
  m,
  freq,
  kata,
  spevar,
  dfreq = NULL,
  dkata = NULL,
  iunit = 1,
  imodel = 1,
  itheory = 1,
  ialgorithm = 1,
  iseed = 150001,
  tol = 1e-05,
  no = 200
)
}
\arguments{
\item{h}{Water depth (from MWL to ocean bottom) scalar, m or ft.}

\item{xyz}{Location coordinates (X, Y, Z) matrix [k x 3]. X coordinate of a specified location (positive in the wave direction of 0 deg), m or ft. Y coordinate to a specified ocation (positive in the wave direction of 90 deg), m or ft. Z coordinate to a specified location (positive upwards, zero at MWL), m or ft.}

\item{t}{Time series vector, sec.}

\item{n}{Total number of wave frequencies.}

\item{m}{Total number of wave directions.}

\item{freq}{Wave frequency vector [n], Hz.}

\item{kata}{Wave direction vector [m], degree.}

\item{spevar}{Directional wave spectral variance matrix [m x n], m^2/Hz/deg or ft^2/Hz/deg.}

\item{dfreq}{(Optional, default NULL) If NULL, wave frequency band width vector dfreq shall be calculated based on the provided wave frequency vector freq; if provided, the length of dfreq shall be 1 or n. For n = 1, dfreq must be given.}

\item{dkata}{(Optional, default NULL) If NULL, wave direction band width vector dkata shall be calculated based on the provided wave direction vector kata; if provided, the length of dkata shall be 1 or m. For m = 1, dkata must be given.}

\item{iunit}{(Optional, default iunit = 1) Choose unit system: 1 for SI unit system, 2 for English Unit.}

\item{imodel}{(Optional, default imodel = 1) Choose linear superposition model for directional wave simulation: 1 for Single Summation Model, 2 for Single Summation Model.}

\item{itheory}{(Optional, default itheory = 1) Choose wave theory: 1 for Linear Wave Theory, 2 for Linear Wave Theory with Wheeler's Stretching.}

\item{ialgorithm}{(Optional, default ialgorithm = 1) Choose irregular wave simulation algorithm: 1 for Sequential Algorithm, 2 for Parallel Algorithm.}

\item{iseed}{(Optional, default iseed = 150001) Initial large odd integer for generating randomly selected initial phases.}

\item{tol}{(Optional, default tol = 1.0e-5) Acceptance tolerance of convergence test for Newton-Raphson Method.}

\item{no}{(Optional, default no = 200) Maximum number of iteration for Newton-Raphson Method.}
}
\value{
A time series of total irregular wave potential, total irregular wave horizontal X-velocity, total irregular wave horizontal Y-velocity, total irregular wave horizontal Z-velocity, total irregular wave horizontal X-acceleration, total irregular wave horizontal Y-acceleration, total irregular wave vertical Z-acceleration, and total irregular wave dynamic pressure at different locations (x, y, z) listed in xyz matrix.
}
\description{
DWS (Directional Wave Simulation) numerically simulates the time series of
the irregular wave at different locations in the ocean based upon a directional
wave energy spectrum. Based upon the input of a 2 dimensional table with spectral
variance versus frequencies and directions and linear wave theory, DWS calculates
the time histories of the surface elevation, the horizontal velocity, the vertical
velocity, and the dynamic pressure at any location (x, y, z) at a time series t.
}
\examples{
DWS(h = 100.0, xyz = t(c(0.0, 0.0, -5.0)), t = 0.0, n = 1, m = 1, freq = 0.1, kata = 45, spevar = 4.5, dfreq = 1, dkata = 1)
DWS(h = 100.0, xyz = t(c(0.0, 0.0, -5.0)), t = seq(from = 0.0, to = 10, by = 1), n = 1, m = 1, freq = 0.1, kata = 45, spevar = 4.5, dfreq = 1, dkata = 1)
DWS(h = 100.0, xyz = t(cbind(c(0.0, 0.0, -5.0), c(1.0, 1.0, -5.0))), t = seq(from = 0.0, to = 10, by = 1), n = 2, m = 1, freq = c(0.1, 0.3), kata = 45, spevar = matrix(c(4.5, 0.5), 1, 2), dfreq = 1, dkata = 1)
DWS(h = 100.0, xyz = t(cbind(c(0.0, 0.0, -5.0), c(1.0, 1.0, -5.0))), t = seq(from = 0.0, to = 10, by = 1), n = 1, m = 2, freq = 0.1, kata = c(0, 45), spevar = matrix(c(0.5, 4.5), 2, 1), dfreq = 1, dkata = 1)
DWS(h = 100.0, xyz = t(cbind(c(0.0, 0.0, -5.0), c(1.0, 1.0, -5.0))), t = seq(from = 0.0, to = 10, by = 1), n = 2, m = 2, freq = c(0.1, 0.3), kata = c(0, 45), spevar = matrix(c(0.0, 4.5, 0.5, 0.5), 2, 2), dfreq = c(rep(1, 2)), dkata = c(rep(1, 2)))
DWS(h = 100.0, xyz = t(cbind(c(0.0, 0.0, -5.0), c(1.0, 1.0, -5.0))), t = seq(from = 0.0, to = 10, by = 1), n = 2, m = 2, freq = c(0.1, 0.3), kata = c(0, 45), spevar = matrix(c(0.0, 4.5, 0.5, 0.5), 2, 2), dfreq = c(rep(1, 2)), dkata = c(rep(1, 2)), iunit = 1, itheory = 2, imodel = 2, ialgorithm = 1, iseed = 150001, tol = 1.0e-5, no = 200)

}
